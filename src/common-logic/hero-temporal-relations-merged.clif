// HERO temporal relation axioms merged with BFO 2020 temporal interval axioms, created 2023-01-11
// Author: Matthew Diller - diller17@ufl.edu


// ******************************************
// BFO 2020 temporal interval relations
// ******************************************


// Source: https://github.com/BFO-ontology/BFO-2020/blob/master/21838-2/common-logic/temporal-region.cl


// If something is an instance of temporal region at t, then t is part of that temporal region [njq-1]
(forall (ti t)
     (if (instance-of ti temporal-region t) (temporal-part-of t ti)))


 // temporal-part-of is reflexive [bvr-1]
 (forall (a)
     (if (exists (t) (instance-of a occurrent t)) (temporal-part-of a a)))


// temporal-part-of is antisymmetric [zdq-1]
(forall (a b)
     (if (and (temporal-part-of a b) (temporal-part-of b a)) (= a b)))


 // proper-temporal-part-of is asymmetric [aqu-1]
 (forall (a b)
     (if (proper-temporal-part-of a b)
      (not (proper-temporal-part-of b a))))


// has-last-instant is functional on second argument [ogd-1]
(forall (p q r)
     (if (and (has-last-instant p q) (has-last-instant p r)) (= q r)))


// temporal-part-of is reflexive [dbj-1]
(forall (a)
     (if (exists (t) (instance-of a temporal-region t))
      (temporal-part-of a a)))


// has-first-instant is functional on second argument [fwf-1]
(forall (p q r)
     (if (and (has-first-instant p q) (has-first-instant p r)) (= q r)))


// a proper temporal part of b means a is a temporal part of b and b a is not the same as b [aeu-1]
(forall (x y)
    (iff (proper-temporal-part-of x y)
      (and (temporal-part-of x y) (not (= x y)))))


// instance-of is dissective on third argument, a temporal region [qaf-1]
(forall (p q r s)
     (if (and (instance-of p q r) (temporal-part-of s r))
      (instance-of p q s)))


// temporal-part-of is transitive [bfq-1]
(forall (a b c)
     (if (and (temporal-part-of a b) (temporal-part-of b c))
      (temporal-part-of a c)))


// The first and last time points for an instant are the instant itself [nfo-1]
(forall (i)
     (iff (instance-of i temporal-instant i)
      (and (has-first-instant i i) (has-last-instant i i))))


// The only part of a temporal instant is itself [pir-1]
(forall (p q)
     (if
      (and (exists (t) (instance-of p temporal-instant t))
       (has-temporal-part p q))
      (= p q)))


// temporal regions are instances at themselves [tvx-1]
(forall (a u)
     (if
      (exists (t)
       (and (instance-of a temporal-region t) (instance-of a u t)))
      (instance-of a u a)))


// proper-temporal-part-of is transitive [mns-1]
(forall (a b c)
     (if
      (and (proper-temporal-part-of a b) (proper-temporal-part-of b c))
      (proper-temporal-part-of a c)))


// If the last instant of a temporal region precedes the first instant of another, then the first region precedes the second [qqv-1]
(forall (i1 i2 l1 f2)
     (if
      (and (has-last-instant i1 l1) (has-first-instant i2 f2)
       (precedes l1 f2))
      (precedes i1 i2)))


// any temporal region has a first and last instant [daf-1]
(forall (i)
     (if (instance-of i temporal-region i)
      (exists (t1 t2)
       (and (has-first-instant i t1) (has-last-instant i t2)))))


// All temporal regions are part of a temporal interval [mvd-1]
(forall (t)
     (if (instance-of t temporal-region t)
      (exists (i)
       (and (instance-of i temporal-interval i) (temporal-part-of t i)))))


// temporal-part-of has domain occurrent and range occurrent [ruj-1]
(forall (a b)
     (if (temporal-part-of a b)
      (and (exists (t) (instance-of a occurrent t))
       (exists (t) (instance-of b occurrent t)))))


// First instant of a temporal region that is not an instant precedes last instant [rzv-1]
(forall (t ft lt)
     (if
      (and (not (instance-of t temporal-instant t))
       (has-first-instant t ft) (has-last-instant t lt))
      (precedes ft lt)))


// If one temporal region precedes another then the first last time point precedes the second first time point [miz-1]
(forall (t1 t2 l1 f2)
     (if
      (and (precedes t1 t2) (has-last-instant t1 l1)
       (has-first-instant t2 f2) (not (= l1 f2)))
      (precedes l1 f2)))


// If a temporal-part-of b then if a is an instance of temporal-region then b is an instance of temporal-region, and vice-versa [mjn-1]
(forall (p q)
     (if (temporal-part-of p q)
      (iff (exists (t) (instance-of p temporal-region t))
       (exists (t) (instance-of q temporal-region t)))))


// has-last-instant has domain temporal-region and range temporal-instant [jtk-1]
(forall (a b)
     (if (has-last-instant a b)
      (and (exists (t) (instance-of a temporal-region t))
       (exists (t) (instance-of b temporal-instant t)))))


// has-first-instant has domain temporal-region and range temporal-instant [fwk-1]
(forall (a b)
     (if (has-first-instant a b)
      (and (exists (t) (instance-of a temporal-region t))
       (exists (t) (instance-of b temporal-instant t)))))


// A one-dimensional temporal region has at least one interval as part [jhe-1]
(forall (t)
     (if (and (instance-of t one-dimensional-temporal-region t))
      (exists (p)
       (and (temporal-part-of p t) (instance-of p temporal-interval p)))))


// temporal instants are totally ordered [qnf-1]
(forall (t1 t2)
     (if
      (and (instance-of t1 temporal-instant t1)
       (instance-of t2 temporal-instant t2))
      (or (precedes t1 t2) (precedes t2 t1) (= t1 t2))))


// temporal-region is the union of zero-dimensional-temporal-region and one-dimensional-temporal-region  [hgs-1]
(forall (i t)
     (if (instance-of i temporal-region t)
      (or (instance-of i zero-dimensional-temporal-region t)
       (instance-of i one-dimensional-temporal-region t))))


// If a temporal-part-of b then if a is an instance of one-dimensional-temporal-region then b is an instance of 
// one-dimensional-temporal-region [mei-1]
(forall (p q)
     (if (temporal-part-of p q)
      (if (exists (t) (instance-of p one-dimensional-temporal-region t))
       (exists (t) (instance-of q one-dimensional-temporal-region t)))))


// If a has-temporal-part b then if a is an instance of zero-dimensional-temporal-region then b is an instance of 
// zero-dimensional-temporal-region [bnt-1]
(forall (p q)
     (if (has-temporal-part p q)
      (if (exists (t) (instance-of p zero-dimensional-temporal-region t))
       (exists (t) (instance-of q zero-dimensional-temporal-region t)))))


// If the last instant of a temporal region is the first instant of another, the first region precedes the second [suk-1]
(forall (i1 i2 l1 f2)
     (if
      (and (not (instance-of i1 temporal-instant i1))
       (not (instance-of i2 temporal-instant i2))
       (has-last-instant i1 l1) (has-first-instant i2 f2) (= l1 f2))
      (precedes i1 i2)))


// A last instant is either part of an extended region or is preceded by it [acg-1]
(forall (l i)
     (if
      (and (instance-of l temporal-instant l)
       (instance-of i temporal-region i)
       (not (instance-of i temporal-instant i)) (has-last-instant i l))
      (iff (not (temporal-part-of l i)) (precedes i l))))


// A first instant is either part of an extended region or precedes it [qga-1]
(forall (f i)
     (if
      (and (instance-of f temporal-instant f)
       (instance-of i temporal-region i)
       (not (instance-of i temporal-instant i)) (has-first-instant i f))
      (iff (not (temporal-part-of f i)) (precedes f i))))


// If two temporal intervals do not overlap then one of them precedes the other [owb-1]
(forall (t1 t2)
     (if
      (and (instance-of t1 temporal-interval t1)
       (instance-of t2 temporal-interval t2)
       (not
        (exists (part)
         (and (temporal-part-of part t1) (temporal-part-of part t2)))))
      (or (precedes t1 t2) (precedes t2 t1))))


// If a has-temporal-part b then if a is an instance of one-dimensional-temporal-region then b is an instance of 
// one-dimensional-temporal-region or zero-dimensional-temporal-region eeg-1]
(forall (p q)
     (if (has-temporal-part p q)
      (if (exists (t) (instance-of p one-dimensional-temporal-region t))
       (exists (t)
        (or (instance-of q one-dimensional-temporal-region t)
         (instance-of q zero-dimensional-temporal-region t))))))


// The first temporal instant is such that it precedes every part of the interval that doesn't have the first instant as part [ixz-1]
(forall (fi i)
     (if
      (and (instance-of fi temporal-instant fi)
       (instance-of i temporal-region i)
       (not (instance-of i temporal-instant i)))
      (if (has-first-instant i fi)
       (forall (ip)
        (if (and (temporal-part-of ip i) (not (temporal-part-of fi ip)))
         (precedes fi ip))))))


// The last temporal instant is such that every part of the interval that doesn't have the last instant as part precedes it [nhd-1]
(forall (li i)
     (if
      (and (instance-of li temporal-instant li)
       (instance-of i temporal-region i)
       (not (instance-of i temporal-instant i)))
      (if (has-last-instant i li)
       (and
        (forall (ip)
         (if (and (temporal-part-of ip i) (not (temporal-part-of li ip)))
          (precedes ip li)))))))


// intervals have no internal gaps [ekm-1]
(forall (i fi li)
     (if
      (and (instance-of i temporal-interval i)
       (has-first-instant i fi) (has-last-instant i li))
      (not
       (exists (gap gap-start gap-end)
        (and (has-first-instant gap gap-start)
         (has-last-instant gap gap-end) (precedes gap-end end)
         (precedes start gap-start) (not (temporal-part-of gap i)))))))


// temporal-part-of has weak-supplementation [vbw-1]
(forall (x y)
     (if
      (and (instance-of x temporal-region x)
       (instance-of y temporal-region y))
      (if (proper-temporal-part-of x y)
       (exists (z)
        (and (proper-temporal-part-of z y)
         (not
          (exists (overlap)
           (and (instance-of overlap temporal-region overlap)
            (temporal-part-of overlap x)
            (temporal-part-of overlap z)))))))))


// any temporal instant that precedes the last instant of an interval and which is preceded by the first instant 
// is part of the interval [zlp-1]
(forall (t r)
     (if
      (and (instance-of t temporal-instant t)
       (instance-of r temporal-interval r))
      (or (has-first-instant r t) (has-last-instant r t)
       (iff
        (exists (f l)
         (and (instance-of r temporal-interval r) (has-first-instant r f)
          (has-last-instant r l) (precedes t l) (precedes f t)))
        (proper-temporal-part-of t r)))))


// two intervals are identical if their first and last instants are the same and if an instant is part of one of the 
// intervals it is also part of the other [xkl-1]
(forall (i1 i2)
     (if
      (and (instance-of i1 temporal-interval i1)
       (instance-of i2 temporal-interval i2))
      (if
       (exists (f l)
        (and (has-first-instant i1 f) (has-first-instant i2 f)
         (has-last-instant i1 l) (has-last-instant i2 l)
         (iff (temporal-part-of l i1) (temporal-part-of l i2))
         (iff (temporal-part-of f i1) (temporal-part-of f i2))))
       (= i1 i2))))


// temporal-part-of has unique-product [wsg-1]
(forall (x y)
     (if
      (and (instance-of x temporal-region x)
       (instance-of y temporal-region y))
      (if
       (exists (o) (and (temporal-part-of o x) (temporal-part-of o y)))
       (exists (z)
        (and (instance-of z temporal-region z)
         (forall (w)
          (if
           (and (instance-of w temporal-region w)
            (instance-of z temporal-region z))
           (iff (temporal-part-of w z)
            (and (temporal-part-of w x) (temporal-part-of w y))))))))))


// An interval has no gaps [nui-1]
(forall (i fi li)
     (if
      (and (instance-of i temporal-interval i)
       (has-first-instant i fi) (has-last-instant i li))
      (not
       (exists (gap gap-start gap-end)
        (and (not (instance-of gap temporal-instant gap))
         (has-first-instant gap gap-start) (has-last-instant gap gap-end)
         (or (precedes gap-end li)
          (and (temporal-part-of li i) (= gap-end li)))
         (or (precedes start gap-start)
          (and (temporal-part-of fi i) (= gap-start fi)))
         (not (temporal-part-of gap i)))))))


// intervals have no gaps - strong version - every two instants without another in between bound an interval [cop-1]
(forall (i fi li)
     (if
      (and (instance-of i temporal-interval i)
       (has-first-instant i fi) (has-last-instant i li))
      (forall (t1 t2)
       (if
        (and (temporal-part-of t1 i) (temporal-part-of t2 i)
         (instance-of t1 temporal-instant t1)
         (instance-of t2 temporal-instant t2) (precedes t1 t2)
         (not
          (exists (t3)
           (and (instance-of t3 temporal-instant t3) (precedes t1 t3)
            (precedes t3 t2)))))
        (exists (fill)
         (and (instance-of fill temporal-interval fill)
          (has-first-instant fill t1) (has-last-instant fill t2)
          (temporal-part-of fill i)))))))


// ******************************************
// MEETS / IS-MET-BY
// ******************************************


// For some temporal instants f1, l1, and f2 and temporal intervals t1 and t2, if f1 first-instant-of t1, l1 last-instant-f t1, f2
// first-instant-of t2, and l1 equals f2, then t1 meets t2 [inm-1]
(forall (f1 l1 f2 t1 t2) 
	(if (and (instance-of f1 temporal-instant f1) (instance-of l1 temporal-instant l1) 
		(instance-of f2 temporal-instant f2) (instance-of t1 temporal-interval t1) 
		(instance-of t2 temporal-interval t2) (has-first-instant t1 f1) 
		(has-last-instant t1 l1) (has-first-instant t2 f2) (= l1 f2)) 
	(meets t1 t2)))


// The inverse of 'meets' is 'is-met-by' [inm-2]
(forall (a b) (iff (meets a b) (is-met-by b a)))


// ******************************************
// BEFORE / AFTER
// ******************************************


// For some temporal intervals t1, t2, and t3, if t1 meets t2 and t2 meets t3, then t1 is before t3 [inb-1]
(forall (t1 t2 t3)
	(if
		(and (instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
			(instance-of t3 temporal-interval t3) (meets t1 t2) (meets t2 t3))
		(before t1 t3)))


// 'before' is transitive [inb-2]
(forall (a b c)
	(if
		(and (before a b) (before b c))
		(before a c)))


// The inverse of 'before' is 'after' [inb-3]
(forall (a b) (iff (before a b) (after b a)))


// ******************************************
// OVERLAPS / OVERLAPPED-BY 
// ******************************************


// For some temporal instants f1, l1, f2, and l2 and temporal intervals t1 and t2, if t1 meets t2 or f1 is the first instant of t1, l1 
// is the last instant of t1, f2 is the first instant of t2, l2 is the last instant of t2, f1 before l1, f2 before l1, and l1 
// before l2, then t1 overlaps t2 [ino-1]
(forall (f1 l1 f2 l2 t1 t2)
	(if
		(and (instance-of f1 temporal-instant f1) (instance-of l1 temporal-instant l1)
			(instance-of f2 temporal-instant f2) (instance-of l2 temporal-instant l2)
			(instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
			(or (meets t1 t2)
				(and (first-instant-of f1 t1) (last-instant-of l1 t1)
				(first-instant-of f2 t2) (last-instant-of l2 t2)
				(before f1 l1) (before f2 l1)
				(before l1 l2))))
		(overlaps t1 t2)))


// The inverse of 'overlaps' is 'overlapped-by' [ino-2]
(forall (a b) (iff (overlaps a b) (overlapped-by b a)))


// ******************************************
// CONTAINS / CONTAINED-BY 
// ******************************************


// For some temporal instants f1 and l1 and temporal intervals t1 and t2, if f1 is the first instant of t2, l1 is the last instant of t2, 
// f1 is a temporal part of t1, and l1 is a temporal part of t1, then t1 contains t2 [inc-1]
(forall (f1 l1 t1 t2)
	(if
		(and (instance-of f1 temporal-instant f1) (instance-of l1 temporal-instant l1)
			(instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
			(first-instant-of f1 t2) (last-instant-of l1 t2)
			(temporal-part-of f1 t1) (temporal-part-of l1 t1))
		(contains t1 t2)))


// The inverse of 'contains' is 'contained-by' [inc-2]
(forall (a b) (iff (contains a b) (contained-by b a)))


// ******************************************
// ENCLOSED-BY / ENCLOSES 
// ******************************************


// For some temporal instants f1, l1, f2, and l2 and some temporal intervals t1 and t2, if f1 is the first instant of t1, l1 is the last instant of t1, f2 is 
// the first instant of t2, l2 is the last instant of t2, f2 before f1, and l1 before l2, then t1 enclosed-by t2 [enc-1]
(forall (f1 l1 f2 l2 t1 t2)
     (if
          (and (instance-of f1 temporal-instant f1) (instance-of l1 temporal-instant l1)
               (instance-of f2 temporal-instant f2) (instance-of l2 temporal-instant l2)
               (instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
               (first-instant-of f1 t1) (last-instant-of l1 t1)
               (before f2 t1) (before l1 l2))
          (enclosed-by t1 t2)))


// The inverse of 'enclosed-by' is 'encloses' [enc-2]
(forall (a b) (iff (enclosed-by a b) (encloses b a)))


// enclosed-by has domain 'temporal region' and range 'temporal region' [enc-3]
(forall (a b)
     (if (enclosed-by a b)
      (and (exists (t) (instance-of a temporal-region t))
       (exists (t) (instance-of b temporal-region t)))))


// ******************************************
// INTERVAL-FINISHES / INTERVAL-FINISHED-BY 
// ******************************************


// For some temporal instants f1, l1, f2, and l2 and temporal intervals t1 and t2, if t2 contains t1, f1 is the first instant of t1, l1 
// is the last instant of t1, f2 is the first instant of t2, l2 is the last instant of t2, f2 before f1, f2 before l1, and l1 equals 
// l2, then t1 finishes t2 [inf-1]
(forall (f1 l1 f2 l2 t1 t2)
	(if
		(and (instance-of f1 temporal-instant f1) (instance-of l1 temporal-instant l1)
			(instance-of f2 temporal-instant f2) (instance-of l2 temporal-instant l2)
			(instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
			(before f2 f1) (before f2 l1) (= l1 l2))
		(interval-finishes t1 t2)))


// The inverse of 'interval-finishes' is 'interval-finished-by' [inf-2]
(forall (a b) (iff (interval-finishes a b) (interval-finished-by b a)))


// ******************************************
// INTERVAL-STARTS / INTERVAL-STARTED-BY 
// ******************************************


// For some temporal instants f1, l1, f2, and l2 and temporal intervals t1 and t2, if t2 contains t1, f1 is the first instant of t1, 
// l1 is the last instant of t1, f2 is the first instant of t2, l2 is the last instant of t2, f1 equals f2, f2 before l1, and
// l1 before l2, then t1 starts t2 [ins-1]
(forall (f1 l1 f2 l2 t1 t2)
	(if
		(and (instance-of f1 temporal-instant f1) (instance-of l1 temporal-instant l1)
			(instance-of f2 temporal-instant f2) (instance-of l2 temporal-instant l2)
			(instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
			(= f1 f2) (before f2 l1) (before l1 l2))
		(interval-starts t1 t2)))


// The inverse of 'interval-starts' is 'interval-started-by' [ins-2]
(forall (a b) (iff (interval-starts a b) (interval-started-by b a)))


// ******************************************
// EQUALS
// ******************************************


// For some temporal instants f1, l1, f2, and l2 and temporal intervals t1 and t2, if f1 is the first instant of t1, 
// l1 is the last instant of t1, f2 is the first instant of t2, l2 is the last instant of t2, f1 equals f2, and l1 equals l2,
// then t1 equals t2 [eqd-1]
(forall (f1 l1 f2 l2 t1 t2)
	(if
		(and (instance-of f1 temporal-instant f1) (instance-of l1 temporal-instant l1)
			(instance-of f2 temporal-instant f2) (instance-of l2 temporal-instant l2)
			(instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
			(= f1 f2) (= l1 l2))
		(equals t1 t2)))


// 'equals' is reflexive [eqd-2]
(forall (a)
	(if (exists (t) (instance-of a temporal-interval t)) (equals a a)))


// 'equals' is symmetric [eqd-3]
(forall (a b)
	(iff (equals a b) (equals b a)))


// ******************************************
// ENDS AFTER
// ******************************************


// For some temporal instants l1 and l2 and temporal intervals t1 and t2, if l1 is the last instant of t1, 
// l2 is the last instant of t2, and l1 after l2, then t1 ends-after t2 [ead-1]
(forall (l1 l2 t1 t2)
	(if
		(and (instance-of l1 temporal-instant l1) (instance-of l2 temporal-instant l2)
			(instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
			(last-instant-of l1 t1) (last-instant-of l2 t2) (after l1 l2))
		(ends-after t1 t2)))


// 'ends-after' is transitive [ead-2]
(forall (a b c)
	(if
		(and (ends-after a b) (ends-after b c))
		(ends-after a c)))


// ******************************************
// STARTS-BEFORE
// ******************************************


// For some temporal instants l1 and l2 and temporal intervals t1 and t2, if l1 is the first instant of t1, 
// l2 is the first instant of t2, and l1 before l2, then t1 starts-before t2 [sbd-1]
(forall (l1 l2 t1 t2)
	(if
		(and (instance-of l1 temporal-instant l1) (instance-of l2 temporal-instant l2)
			(instance-of t1 temporal-interval t1) (instance-of t2 temporal-interval t2)
			(first-instant-of l1 t1) (first-instant-of l2 t2)
			(before l1 l2))
		(starts-before t1 t2)))


// 'starts-before' is transitive [sbd-2]
(forall (a b c)
	(if
		(and (starts-before a b) (starts-before b c))
		(starts-before a c)))

		